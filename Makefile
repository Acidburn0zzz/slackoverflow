################################################################################
# SlackOverflow make
################################################################################
SLACKOVERFLOW = slackoverflow
SLACKOVERFLOW_PATH = $(PWD)
SLACKOVERFLOW_BUILD_DIR = ${SLACKOVERFLOW_PATH}/build
SLACKOVERFLOW_BINARY = ${SLACKOVERFLOW_BUILD_DIR}/${SLACKOVERFLOW}
SLACKOVERFLOW_CONTRIBUTORS = ${SLACKOVERFLOW_PATH}/slackoverflow/contributors.go
SLACKOVERFLOW_BUILD_DATE = $(shell if hash gdate 2>/dev/null; then gdate --rfc-3339=seconds | sed 's/ /T/'; else date --rfc-3339=seconds | sed 's/ /T/'; fi)

################################################################################
# Go LDFLAGS
define SLACKOVERFLOW_LDFLAGS
-X main.buildDate=${SLACKOVERFLOW_BUILD_DATE}
endef
export SLACKOVERFLOW_LDFLAGS

################################################################################
# Makefile Functions
define log_info
  @printf "\033[94m%s\033[0m \033[1m%s\033[0m\n" "[${SLACKOVERFLOW} make]:" "$(1)"
endef
define log_error
  @printf "\033[33m%s\031[0m \033[1m%s\033[0m\n" "[${SLACKOVERFLOW} make]:" "$(1)"
endef
define log_warn
  @printf "\033[33m%s\033[0m \033[1m%s\033[0m\n" "[${SLACKOVERFLOW} make]:" "$(1)"
endef
define log_ok
  @printf "\033[32m%s\033[0m \033[1m%s\033[0m\n" "[${SLACKOVERFLOW} make]:" "$(1)"
endef

################################################################################
# Default goals
.PHONY: help
.DEFAULT_GOAL := help

################################################################################
# Help
help: ## Show this help menu
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "\033[33m%-20s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

################################################################################
build-bin: ## Build new SlackOverflow binary
	$(call log_info, build new SlackOverflow binary)
	$(shell go build -ldflags "${SLACKOVERFLOW_LDFLAGS}" -o ${SLACKOVERFLOW_BINARY} .)

################################################################################
info: ## Show makefile variables
	$(call log_info, SLACKOVERFLOW               ${SLACKOVERFLOW}.)
	$(call log_info, SLACKOVERFLOW_PATH          ${SLACKOVERFLOW_PATH}.)
	$(call log_info, SLACKOVERFLOW_BUILD_DIR     ${SLACKOVERFLOW_BUILD_DIR}.)
	$(call log_info, SLACKOVERFLOW_BINARY        ${SLACKOVERFLOW_BINARY}.)
	$(call log_info, SLACKOVERFLOW_CONTRIBUTORS  ${SLACKOVERFLOW_CONTRIBUTORS}.)
	$(call log_info, SLACKOVERFLOW_BUILD_DATE    ${SLACKOVERFLOW_BUILD_DATE}.)
	$(call log_info, SLACKOVERFLOW_LDFLAGS       ${SLACKOVERFLOW_LDFLAGS}.)

################################################################################
dependencies: ## Install SlackOverflow build dependencies
	$(call log_info, The Vendor Tool for Go.)
	@go get -u github.com/kardianos/govendor
	$(call log_ok, github.com/kardianos/govendor)

	$(call log_info, sqlite3 driver conforming to the built-in database/sql interface.)
	@go get -u github.com/mattn/go-sqlite3
	$(call log_ok, github.com/mattn/go-sqlite3)

	$(call log_info, Install Aurora - ultimate ANSI colors for Golang. The package supports Printf/Sprintf etc.)
	@govendor fetch github.com/logrusorgru/aurora@962a6974312dde57d1f6f5738b4f83e1af9f38a4
	$(call log_ok, github.com/logrusorgru/aurora@962a6974312dde57d1f6f5738b4f83e1af9f38a4)

	$(call log_info, Install yaml.v2 - package that implements YAML support for the Go language.)
	@govendor fetch github.com/go-yaml/yaml@=v2
	$(call log_ok, github.com/go-yaml/yaml@=v2)

	$(call log_info, Install go-flags - a go library for parsing command line arguments.)
	@govendor fetch github.com/jessevdk/go-flags@=v1.1.0
	$(call log_ok, github.com/jessevdk/go-flags@=v1.1.0)

################################################################################
contributors: ## Update contributors list
	$(call log_info, Regenerating ${SLACKOVERFLOW_CONTRIBUTORS}.)
	$(shell echo -e "// Package slackoverflow - This is autogenerated file. To Regenerate contributors list run (make contributors)" > ${SLACKOVERFLOW_CONTRIBUTORS})
	$(shell echo -e "package slackoverflow\n" >> ${SLACKOVERFLOW_CONTRIBUTORS})
	$(shell echo -e "var contributors = []string{" >> ${SLACKOVERFLOW_CONTRIBUTORS})
	$(shell git log --format='  "%aN %aE",' | sort -u >> ${SLACKOVERFLOW_CONTRIBUTORS})
	$(shell echo -e "}" >> ${SLACKOVERFLOW_CONTRIBUTORS})
	$(call log_ok, Updated contributors list)
